// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface BranchRestrictionGroup {
    owner: string;
    slug: string;
}

export interface BranchingModelBranchType {
    enabled: boolean;
    kind: string;
    prefix?: string;
}

export interface BranchingModelDevelopment {
    branchDoesNotExist?: boolean;
    isValid: boolean;
    name?: string;
    useMainbranch?: boolean;
}

export interface BranchingModelProduction {
    branchDoesNotExist?: boolean;
    enabled?: boolean;
    isValid: boolean;
    name?: string;
    useMainbranch?: boolean;
}

export interface DeploymentRestrictions {
    adminOnly?: boolean;
}

export interface ForkedRepositoryLink {
    avatar?: outputs.ForkedRepositoryLinkAvatar;
}

export interface ForkedRepositoryLinkAvatar {
    href?: string;
}

export interface GetCurrentUserEmail {
    email: string;
    isConfirmed: boolean;
    isPrimary: boolean;
}

export interface GetGroupsGroup {
    autoAdd: boolean;
    emailForwardingDisabled: boolean;
    name: string;
    permission: string;
    slug: string;
}

export interface GetHookTypesHookType {
    category: string;
    description: string;
    event: string;
    label: string;
}

export interface GetIpRangesRange {
    cidr: string;
    directions: string[];
    mask: string;
    maskLen: number;
    network: string;
    products: string[];
    regions: string[];
}

export interface PipelineScheduleTarget {
    refName: string;
    refType: string;
    selector: outputs.PipelineScheduleTargetSelector;
}

export interface PipelineScheduleTargetSelector {
    pattern: string;
    type?: string;
}

export interface PipelineSshKnownHostPublicKey {
    key: string;
    keyType: string;
    md5Fingerprint: string;
    sha256Fingerprint: string;
}

export interface ProjectBranchingModelBranchType {
    enabled: boolean;
    kind: string;
    prefix?: string;
}

export interface ProjectBranchingModelDevelopment {
    branchDoesNotExist?: boolean;
    isValid: boolean;
    name?: string;
    useMainbranch?: boolean;
}

export interface ProjectBranchingModelProduction {
    branchDoesNotExist?: boolean;
    enabled?: boolean;
    isValid: boolean;
    name?: string;
    useMainbranch?: boolean;
}

export interface ProjectLink {
    avatar?: outputs.ProjectLinkAvatar;
}

export interface ProjectLinkAvatar {
    href?: string;
}

export interface RepositoryLink {
    avatar?: outputs.RepositoryLinkAvatar;
}

export interface RepositoryLinkAvatar {
    href?: string;
}

