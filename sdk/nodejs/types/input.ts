// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface BranchRestrictionGroup {
    owner: pulumi.Input<string>;
    slug: pulumi.Input<string>;
}

export interface BranchingModelBranchType {
    enabled?: pulumi.Input<boolean>;
    kind: pulumi.Input<string>;
    prefix?: pulumi.Input<string>;
}

export interface BranchingModelDevelopment {
    branchDoesNotExist?: pulumi.Input<boolean>;
    isValid?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    useMainbranch?: pulumi.Input<boolean>;
}

export interface BranchingModelProduction {
    branchDoesNotExist?: pulumi.Input<boolean>;
    enabled?: pulumi.Input<boolean>;
    isValid?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    useMainbranch?: pulumi.Input<boolean>;
}

export interface DeploymentRestrictions {
    adminOnly?: pulumi.Input<boolean>;
}

export interface ForkedRepositoryLink {
    avatar?: pulumi.Input<inputs.ForkedRepositoryLinkAvatar>;
}

export interface ForkedRepositoryLinkAvatar {
    href?: pulumi.Input<string>;
}

export interface PipelineScheduleTarget {
    refName: pulumi.Input<string>;
    refType: pulumi.Input<string>;
    selector: pulumi.Input<inputs.PipelineScheduleTargetSelector>;
}

export interface PipelineScheduleTargetSelector {
    pattern: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface PipelineSshKnownHostPublicKey {
    key: pulumi.Input<string>;
    keyType: pulumi.Input<string>;
    md5Fingerprint?: pulumi.Input<string>;
    sha256Fingerprint?: pulumi.Input<string>;
}

export interface ProjectBranchingModelBranchType {
    enabled?: pulumi.Input<boolean>;
    kind: pulumi.Input<string>;
    prefix?: pulumi.Input<string>;
}

export interface ProjectBranchingModelDevelopment {
    branchDoesNotExist?: pulumi.Input<boolean>;
    isValid?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    useMainbranch?: pulumi.Input<boolean>;
}

export interface ProjectBranchingModelProduction {
    branchDoesNotExist?: pulumi.Input<boolean>;
    enabled?: pulumi.Input<boolean>;
    isValid?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    useMainbranch?: pulumi.Input<boolean>;
}

export interface ProjectLink {
    avatar?: pulumi.Input<inputs.ProjectLinkAvatar>;
}

export interface ProjectLinkAvatar {
    href?: pulumi.Input<string>;
}

export interface RepositoryLink {
    avatar?: pulumi.Input<inputs.RepositoryLinkAvatar>;
}

export interface RepositoryLinkAvatar {
    href?: pulumi.Input<string>;
}
