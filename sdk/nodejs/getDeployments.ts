// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a way to fetch data on Deployments.
 *
 * OAuth2 Scopes: `none`
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as bitbucket from "@pulumi/bitbucket";
 *
 * const example = bitbucket.getDeployments({
 *     repository: "example",
 *     workspace: "example",
 * });
 * ```
 */
export function getDeployments(args: GetDeploymentsArgs, opts?: pulumi.InvokeOptions): Promise<GetDeploymentsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("bitbucket:index/getDeployments:getDeployments", {
        "repository": args.repository,
        "workspace": args.workspace,
    }, opts);
}

/**
 * A collection of arguments for invoking getDeployments.
 */
export interface GetDeploymentsArgs {
    /**
     * The repository name.
     */
    repository: string;
    /**
     * The workspace name.
     */
    workspace: string;
}

/**
 * A collection of values returned by getDeployments.
 */
export interface GetDeploymentsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Names of deployments for a repository.
     */
    readonly names: string[];
    readonly repository: string;
    /**
     * UUIDs of deployments for a repository.
     */
    readonly uuids: string[];
    readonly workspace: string;
}
/**
 * Provides a way to fetch data on Deployments.
 *
 * OAuth2 Scopes: `none`
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as bitbucket from "@pulumi/bitbucket";
 *
 * const example = bitbucket.getDeployments({
 *     repository: "example",
 *     workspace: "example",
 * });
 * ```
 */
export function getDeploymentsOutput(args: GetDeploymentsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDeploymentsResult> {
    return pulumi.output(args).apply((a: any) => getDeployments(a, opts))
}

/**
 * A collection of arguments for invoking getDeployments.
 */
export interface GetDeploymentsOutputArgs {
    /**
     * The repository name.
     */
    repository: pulumi.Input<string>;
    /**
     * The workspace name.
     */
    workspace: pulumi.Input<string>;
}
