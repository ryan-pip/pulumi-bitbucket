// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides a way to fetch data of hook types.
 *
 * OAuth2 Scopes: `none`
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as bitbucket from "@pulumi/bitbucket";
 *
 * const example = bitbucket.getHookTypes({
 *     subjectType: "workspace",
 * });
 * ```
 */
export function getHookTypes(args: GetHookTypesArgs, opts?: pulumi.InvokeOptions): Promise<GetHookTypesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("bitbucket:index/getHookTypes:getHookTypes", {
        "subjectType": args.subjectType,
    }, opts);
}

/**
 * A collection of arguments for invoking getHookTypes.
 */
export interface GetHookTypesArgs {
    /**
     * A resource or subject type. Valid values are `workspace`, `user`, `repository`, `team`.
     */
    subjectType: string;
}

/**
 * A collection of values returned by getHookTypes.
 */
export interface GetHookTypesResult {
    /**
     * A Set of Hook Event Types. See Hook Types below.
     */
    readonly hookTypes: outputs.GetHookTypesHookType[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly subjectType: string;
}
/**
 * Provides a way to fetch data of hook types.
 *
 * OAuth2 Scopes: `none`
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as bitbucket from "@pulumi/bitbucket";
 *
 * const example = bitbucket.getHookTypes({
 *     subjectType: "workspace",
 * });
 * ```
 */
export function getHookTypesOutput(args: GetHookTypesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHookTypesResult> {
    return pulumi.output(args).apply((a: any) => getHookTypes(a, opts))
}

/**
 * A collection of arguments for invoking getHookTypes.
 */
export interface GetHookTypesOutputArgs {
    /**
     * A resource or subject type. Valid values are `workspace`, `user`, `repository`, `team`.
     */
    subjectType: pulumi.Input<string>;
}
