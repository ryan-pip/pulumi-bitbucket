# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetPipelineOidcConfigKeysResult',
    'AwaitableGetPipelineOidcConfigKeysResult',
    'get_pipeline_oidc_config_keys',
    'get_pipeline_oidc_config_keys_output',
]

@pulumi.output_type
class GetPipelineOidcConfigKeysResult:
    """
    A collection of values returned by getPipelineOidcConfigKeys.
    """
    def __init__(__self__, id=None, keys=None, workspace=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if keys and not isinstance(keys, str):
            raise TypeError("Expected argument 'keys' to be a str")
        pulumi.set(__self__, "keys", keys)
        if workspace and not isinstance(workspace, str):
            raise TypeError("Expected argument 'workspace' to be a str")
        pulumi.set(__self__, "workspace", workspace)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def keys(self) -> str:
        return pulumi.get(self, "keys")

    @property
    @pulumi.getter
    def workspace(self) -> str:
        return pulumi.get(self, "workspace")


class AwaitableGetPipelineOidcConfigKeysResult(GetPipelineOidcConfigKeysResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetPipelineOidcConfigKeysResult(
            id=self.id,
            keys=self.keys,
            workspace=self.workspace)


def get_pipeline_oidc_config_keys(workspace: Optional[str] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetPipelineOidcConfigKeysResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['workspace'] = workspace
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('bitbucket:index/getPipelineOidcConfigKeys:getPipelineOidcConfigKeys', __args__, opts=opts, typ=GetPipelineOidcConfigKeysResult).value

    return AwaitableGetPipelineOidcConfigKeysResult(
        id=pulumi.get(__ret__, 'id'),
        keys=pulumi.get(__ret__, 'keys'),
        workspace=pulumi.get(__ret__, 'workspace'))


@_utilities.lift_output_func(get_pipeline_oidc_config_keys)
def get_pipeline_oidc_config_keys_output(workspace: Optional[pulumi.Input[str]] = None,
                                         opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetPipelineOidcConfigKeysResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
