// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bitbucket

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
	"github.com/ryan-pip/pulumi-bitbucket/sdk/go/bitbucket/internal"
)

func GetHookTypes(ctx *pulumi.Context, args *GetHookTypesArgs, opts ...pulumi.InvokeOption) (*GetHookTypesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetHookTypesResult
	err := ctx.Invoke("bitbucket:index/getHookTypes:getHookTypes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getHookTypes.
type GetHookTypesArgs struct {
	SubjectType string `pulumi:"subjectType"`
}

// A collection of values returned by getHookTypes.
type GetHookTypesResult struct {
	HookTypes []GetHookTypesHookType `pulumi:"hookTypes"`
	// The provider-assigned unique ID for this managed resource.
	Id          string `pulumi:"id"`
	SubjectType string `pulumi:"subjectType"`
}

func GetHookTypesOutput(ctx *pulumi.Context, args GetHookTypesOutputArgs, opts ...pulumi.InvokeOption) GetHookTypesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetHookTypesResult, error) {
			args := v.(GetHookTypesArgs)
			r, err := GetHookTypes(ctx, &args, opts...)
			var s GetHookTypesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetHookTypesResultOutput)
}

// A collection of arguments for invoking getHookTypes.
type GetHookTypesOutputArgs struct {
	SubjectType pulumi.StringInput `pulumi:"subjectType"`
}

func (GetHookTypesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHookTypesArgs)(nil)).Elem()
}

// A collection of values returned by getHookTypes.
type GetHookTypesResultOutput struct{ *pulumi.OutputState }

func (GetHookTypesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHookTypesResult)(nil)).Elem()
}

func (o GetHookTypesResultOutput) ToGetHookTypesResultOutput() GetHookTypesResultOutput {
	return o
}

func (o GetHookTypesResultOutput) ToGetHookTypesResultOutputWithContext(ctx context.Context) GetHookTypesResultOutput {
	return o
}

func (o GetHookTypesResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetHookTypesResult] {
	return pulumix.Output[GetHookTypesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetHookTypesResultOutput) HookTypes() GetHookTypesHookTypeArrayOutput {
	return o.ApplyT(func(v GetHookTypesResult) []GetHookTypesHookType { return v.HookTypes }).(GetHookTypesHookTypeArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetHookTypesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHookTypesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetHookTypesResultOutput) SubjectType() pulumi.StringOutput {
	return o.ApplyT(func(v GetHookTypesResult) string { return v.SubjectType }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetHookTypesResultOutput{})
}
