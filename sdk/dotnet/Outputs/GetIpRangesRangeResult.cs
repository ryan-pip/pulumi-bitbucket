// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Bitbucket.Outputs
{

    [OutputType]
    public sealed class GetIpRangesRangeResult
    {
        /// <summary>
        /// The CIDR of the range.
        /// </summary>
        public readonly string Cidr;
        /// <summary>
        /// A Set of directions (Ingress/Egress) the range is associated with.
        /// </summary>
        public readonly ImmutableArray<string> Directions;
        /// <summary>
        /// More mask of the range.
        /// </summary>
        public readonly string Mask;
        /// <summary>
        /// The make length of the range.
        /// </summary>
        public readonly int MaskLen;
        /// <summary>
        /// The network of the range.
        /// </summary>
        public readonly string Network;
        /// <summary>
        /// The allowed perimeter of the range.
        /// </summary>
        public readonly string Perimeter;
        /// <summary>
        /// A Set of Atlasian products (Bitbucket, Jira, etc) the range is associated with.
        /// </summary>
        public readonly ImmutableArray<string> Products;
        /// <summary>
        /// A Set of regions the range is associated with.
        /// </summary>
        public readonly ImmutableArray<string> Regions;

        [OutputConstructor]
        private GetIpRangesRangeResult(
            string cidr,

            ImmutableArray<string> directions,

            string mask,

            int maskLen,

            string network,

            string perimeter,

            ImmutableArray<string> products,

            ImmutableArray<string> regions)
        {
            Cidr = cidr;
            Directions = directions;
            Mask = mask;
            MaskLen = maskLen;
            Network = network;
            Perimeter = perimeter;
            Products = products;
            Regions = regions;
        }
    }
}
