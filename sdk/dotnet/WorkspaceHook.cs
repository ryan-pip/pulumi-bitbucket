// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Bitbucket
{
    /// <summary>
    /// Provides a Bitbucket workspace hook resource.
    /// 
    /// This allows you to manage your webhooks on a workspace.
    /// 
    /// OAuth2 Scopes: `webhook`
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Bitbucket = Pulumi.Bitbucket;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var deployOnPush = new Bitbucket.WorkspaceHook("deployOnPush", new()
    ///     {
    ///         Description = "Deploy the code via my webhook",
    ///         Events = new[]
    ///         {
    ///             "repo:push",
    ///         },
    ///         Url = "https://mywebhookservice.mycompany.com/deploy-on-push",
    ///         Workspace = "myteam",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Hooks can be imported using their `workspace/hook-id` ID, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import bitbucket:index/workspaceHook:WorkspaceHook hook my-account/hook-id
    /// ```
    /// </summary>
    [BitbucketResourceType("bitbucket:index/workspaceHook:WorkspaceHook")]
    public partial class WorkspaceHook : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether the webhook configuration is active or not (Default: `true`).
        /// </summary>
        [Output("active")]
        public Output<bool?> Active { get; private set; } = null!;

        /// <summary>
        /// The name / description to show in the UI.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The events this webhook is subscribed to. Valid values can be found at [Bitbucket Webhook Docs](https://developer.atlassian.com/cloud/bitbucket/rest/api-group-repositories/#api-repositories-workspace-repo-slug-hooks-post).
        /// </summary>
        [Output("events")]
        public Output<ImmutableArray<string>> Events { get; private set; } = null!;

        /// <summary>
        /// Whether a webhook history is enabled.
        /// </summary>
        [Output("historyEnabled")]
        public Output<bool?> HistoryEnabled { get; private set; } = null!;

        /// <summary>
        /// A Webhook secret value. Passing a null or empty secret or not passing a secret will leave the webhook's secret unset. This value is not returned on read and cannot resolve diffs or be imported as its not returned back from bitbucket API.
        /// </summary>
        [Output("secret")]
        public Output<string?> Secret { get; private set; } = null!;

        /// <summary>
        /// Whether a webhook secret is set.
        /// </summary>
        [Output("secretSet")]
        public Output<bool> SecretSet { get; private set; } = null!;

        /// <summary>
        /// Whether to skip certificate verification or not (Default: `true`).
        /// </summary>
        [Output("skipCertVerification")]
        public Output<bool?> SkipCertVerification { get; private set; } = null!;

        /// <summary>
        /// Where to POST to.
        /// </summary>
        [Output("url")]
        public Output<string> Url { get; private set; } = null!;

        /// <summary>
        /// The UUID of the workspace webhook.
        /// </summary>
        [Output("uuid")]
        public Output<string> Uuid { get; private set; } = null!;

        /// <summary>
        /// The workspace of this repository. Can be you or any team you
        /// have write access to.
        /// </summary>
        [Output("workspace")]
        public Output<string> Workspace { get; private set; } = null!;


        /// <summary>
        /// Create a WorkspaceHook resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WorkspaceHook(string name, WorkspaceHookArgs args, CustomResourceOptions? options = null)
            : base("bitbucket:index/workspaceHook:WorkspaceHook", name, args ?? new WorkspaceHookArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WorkspaceHook(string name, Input<string> id, WorkspaceHookState? state = null, CustomResourceOptions? options = null)
            : base("bitbucket:index/workspaceHook:WorkspaceHook", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/ryan-pip",
                AdditionalSecretOutputs =
                {
                    "secret",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WorkspaceHook resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WorkspaceHook Get(string name, Input<string> id, WorkspaceHookState? state = null, CustomResourceOptions? options = null)
        {
            return new WorkspaceHook(name, id, state, options);
        }
    }

    public sealed class WorkspaceHookArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether the webhook configuration is active or not (Default: `true`).
        /// </summary>
        [Input("active")]
        public Input<bool>? Active { get; set; }

        /// <summary>
        /// The name / description to show in the UI.
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        [Input("events", required: true)]
        private InputList<string>? _events;

        /// <summary>
        /// The events this webhook is subscribed to. Valid values can be found at [Bitbucket Webhook Docs](https://developer.atlassian.com/cloud/bitbucket/rest/api-group-repositories/#api-repositories-workspace-repo-slug-hooks-post).
        /// </summary>
        public InputList<string> Events
        {
            get => _events ?? (_events = new InputList<string>());
            set => _events = value;
        }

        /// <summary>
        /// Whether a webhook history is enabled.
        /// </summary>
        [Input("historyEnabled")]
        public Input<bool>? HistoryEnabled { get; set; }

        [Input("secret")]
        private Input<string>? _secret;

        /// <summary>
        /// A Webhook secret value. Passing a null or empty secret or not passing a secret will leave the webhook's secret unset. This value is not returned on read and cannot resolve diffs or be imported as its not returned back from bitbucket API.
        /// </summary>
        public Input<string>? Secret
        {
            get => _secret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _secret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Whether to skip certificate verification or not (Default: `true`).
        /// </summary>
        [Input("skipCertVerification")]
        public Input<bool>? SkipCertVerification { get; set; }

        /// <summary>
        /// Where to POST to.
        /// </summary>
        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        /// <summary>
        /// The workspace of this repository. Can be you or any team you
        /// have write access to.
        /// </summary>
        [Input("workspace", required: true)]
        public Input<string> Workspace { get; set; } = null!;

        public WorkspaceHookArgs()
        {
        }
        public static new WorkspaceHookArgs Empty => new WorkspaceHookArgs();
    }

    public sealed class WorkspaceHookState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether the webhook configuration is active or not (Default: `true`).
        /// </summary>
        [Input("active")]
        public Input<bool>? Active { get; set; }

        /// <summary>
        /// The name / description to show in the UI.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("events")]
        private InputList<string>? _events;

        /// <summary>
        /// The events this webhook is subscribed to. Valid values can be found at [Bitbucket Webhook Docs](https://developer.atlassian.com/cloud/bitbucket/rest/api-group-repositories/#api-repositories-workspace-repo-slug-hooks-post).
        /// </summary>
        public InputList<string> Events
        {
            get => _events ?? (_events = new InputList<string>());
            set => _events = value;
        }

        /// <summary>
        /// Whether a webhook history is enabled.
        /// </summary>
        [Input("historyEnabled")]
        public Input<bool>? HistoryEnabled { get; set; }

        [Input("secret")]
        private Input<string>? _secret;

        /// <summary>
        /// A Webhook secret value. Passing a null or empty secret or not passing a secret will leave the webhook's secret unset. This value is not returned on read and cannot resolve diffs or be imported as its not returned back from bitbucket API.
        /// </summary>
        public Input<string>? Secret
        {
            get => _secret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _secret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Whether a webhook secret is set.
        /// </summary>
        [Input("secretSet")]
        public Input<bool>? SecretSet { get; set; }

        /// <summary>
        /// Whether to skip certificate verification or not (Default: `true`).
        /// </summary>
        [Input("skipCertVerification")]
        public Input<bool>? SkipCertVerification { get; set; }

        /// <summary>
        /// Where to POST to.
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        /// <summary>
        /// The UUID of the workspace webhook.
        /// </summary>
        [Input("uuid")]
        public Input<string>? Uuid { get; set; }

        /// <summary>
        /// The workspace of this repository. Can be you or any team you
        /// have write access to.
        /// </summary>
        [Input("workspace")]
        public Input<string>? Workspace { get; set; }

        public WorkspaceHookState()
        {
        }
        public static new WorkspaceHookState Empty => new WorkspaceHookState();
    }
}
