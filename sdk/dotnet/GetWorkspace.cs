// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Bitbucket
{
    public static class GetWorkspace
    {
        /// <summary>
        /// Provides a way to fetch data on a workspace.
        /// 
        /// OAuth2 Scopes: `none`
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Bitbucket = Pulumi.Bitbucket;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Bitbucket.GetWorkspace.Invoke(new()
        ///     {
        ///         Workspace = "gob",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetWorkspaceResult> InvokeAsync(GetWorkspaceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkspaceResult>("bitbucket:index/getWorkspace:getWorkspace", args ?? new GetWorkspaceArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a way to fetch data on a workspace.
        /// 
        /// OAuth2 Scopes: `none`
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Bitbucket = Pulumi.Bitbucket;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Bitbucket.GetWorkspace.Invoke(new()
        ///     {
        ///         Workspace = "gob",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetWorkspaceResult> Invoke(GetWorkspaceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkspaceResult>("bitbucket:index/getWorkspace:getWorkspace", args ?? new GetWorkspaceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkspaceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// This can either be the workspace ID (slug) or the workspace UUID surrounded by curly-braces
        /// </summary>
        [Input("workspace", required: true)]
        public string Workspace { get; set; } = null!;

        public GetWorkspaceArgs()
        {
        }
        public static new GetWorkspaceArgs Empty => new GetWorkspaceArgs();
    }

    public sealed class GetWorkspaceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// This can either be the workspace ID (slug) or the workspace UUID surrounded by curly-braces
        /// </summary>
        [Input("workspace", required: true)]
        public Input<string> Workspace { get; set; } = null!;

        public GetWorkspaceInvokeArgs()
        {
        }
        public static new GetWorkspaceInvokeArgs Empty => new GetWorkspaceInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkspaceResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Indicates whether the workspace is publicly accessible, or whether it is private to the members and consequently only visible to members.
        /// </summary>
        public readonly bool IsPrivate;
        /// <summary>
        /// The name of the workspace.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The short label that identifies this workspace.
        /// </summary>
        public readonly string Slug;
        public readonly string Workspace;

        [OutputConstructor]
        private GetWorkspaceResult(
            string id,

            bool isPrivate,

            string name,

            string slug,

            string workspace)
        {
            Id = id;
            IsPrivate = isPrivate;
            Name = name;
            Slug = slug;
            Workspace = workspace;
        }
    }
}
