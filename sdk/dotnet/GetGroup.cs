// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Bitbucket
{
    public static class GetGroup
    {
        /// <summary>
        /// Provides a way to fetch data of a group.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Bitbucket = Pulumi.Bitbucket;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Bitbucket.GetGroup.Invoke(new()
        ///     {
        ///         Slug = "example",
        ///         Workspace = "example",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetGroupResult> InvokeAsync(GetGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGroupResult>("bitbucket:index/getGroup:getGroup", args ?? new GetGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a way to fetch data of a group.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Bitbucket = Pulumi.Bitbucket;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Bitbucket.GetGroup.Invoke(new()
        ///     {
        ///         Slug = "example",
        ///         Workspace = "example",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetGroupResult> Invoke(GetGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGroupResult>("bitbucket:index/getGroup:getGroup", args ?? new GetGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The group's slug.
        /// </summary>
        [Input("slug", required: true)]
        public string Slug { get; set; } = null!;

        /// <summary>
        /// The UUID that bitbucket groups to connect a group to various objects
        /// </summary>
        [Input("workspace", required: true)]
        public string Workspace { get; set; } = null!;

        public GetGroupArgs()
        {
        }
        public static new GetGroupArgs Empty => new GetGroupArgs();
    }

    public sealed class GetGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The group's slug.
        /// </summary>
        [Input("slug", required: true)]
        public Input<string> Slug { get; set; } = null!;

        /// <summary>
        /// The UUID that bitbucket groups to connect a group to various objects
        /// </summary>
        [Input("workspace", required: true)]
        public Input<string> Workspace { get; set; } = null!;

        public GetGroupInvokeArgs()
        {
        }
        public static new GetGroupInvokeArgs Empty => new GetGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetGroupResult
    {
        /// <summary>
        /// Whether to automatically add users the group
        /// </summary>
        public readonly bool AutoAdd;
        /// <summary>
        /// Whether to disable email forwarding for group.
        /// </summary>
        public readonly bool EmailForwardingDisabled;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the group.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// One of `read`, `write`, and `admin`.
        /// </summary>
        public readonly string Permission;
        public readonly string Slug;
        public readonly string Workspace;

        [OutputConstructor]
        private GetGroupResult(
            bool autoAdd,

            bool emailForwardingDisabled,

            string id,

            string name,

            string permission,

            string slug,

            string workspace)
        {
            AutoAdd = autoAdd;
            EmailForwardingDisabled = emailForwardingDisabled;
            Id = id;
            Name = name;
            Permission = permission;
            Slug = slug;
            Workspace = workspace;
        }
    }
}
