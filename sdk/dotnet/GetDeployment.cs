// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Bitbucket
{
    public static class GetDeployment
    {
        /// <summary>
        /// Provides a way to fetch data on a Deployment.
        /// 
        /// OAuth2 Scopes: `none`
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Bitbucket = Pulumi.Bitbucket;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Bitbucket.GetDeployment.Invoke(new()
        ///     {
        ///         Repository = "example",
        ///         Uuid = "example",
        ///         Workspace = "example",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDeploymentResult> InvokeAsync(GetDeploymentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDeploymentResult>("bitbucket:index/getDeployment:getDeployment", args ?? new GetDeploymentArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a way to fetch data on a Deployment.
        /// 
        /// OAuth2 Scopes: `none`
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Bitbucket = Pulumi.Bitbucket;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Bitbucket.GetDeployment.Invoke(new()
        ///     {
        ///         Repository = "example",
        ///         Uuid = "example",
        ///         Workspace = "example",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDeploymentResult> Invoke(GetDeploymentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDeploymentResult>("bitbucket:index/getDeployment:getDeployment", args ?? new GetDeploymentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDeploymentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The repository name.
        /// </summary>
        [Input("repository", required: true)]
        public string Repository { get; set; } = null!;

        /// <summary>
        /// The environment UUID.
        /// </summary>
        [Input("uuid", required: true)]
        public string Uuid { get; set; } = null!;

        /// <summary>
        /// The workspace name.
        /// </summary>
        [Input("workspace", required: true)]
        public string Workspace { get; set; } = null!;

        public GetDeploymentArgs()
        {
        }
        public static new GetDeploymentArgs Empty => new GetDeploymentArgs();
    }

    public sealed class GetDeploymentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The repository name.
        /// </summary>
        [Input("repository", required: true)]
        public Input<string> Repository { get; set; } = null!;

        /// <summary>
        /// The environment UUID.
        /// </summary>
        [Input("uuid", required: true)]
        public Input<string> Uuid { get; set; } = null!;

        /// <summary>
        /// The workspace name.
        /// </summary>
        [Input("workspace", required: true)]
        public Input<string> Workspace { get; set; } = null!;

        public GetDeploymentInvokeArgs()
        {
        }
        public static new GetDeploymentInvokeArgs Empty => new GetDeploymentInvokeArgs();
    }


    [OutputType]
    public sealed class GetDeploymentResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the environment.
        /// </summary>
        public readonly string Name;
        public readonly string Repository;
        /// <summary>
        /// The stage (Test, Staging, Production).
        /// </summary>
        public readonly string Stage;
        public readonly string Uuid;
        public readonly string Workspace;

        [OutputConstructor]
        private GetDeploymentResult(
            string id,

            string name,

            string repository,

            string stage,

            string uuid,

            string workspace)
        {
            Id = id;
            Name = name;
            Repository = repository;
            Stage = stage;
            Uuid = uuid;
            Workspace = workspace;
        }
    }
}
